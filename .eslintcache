[{"C:\\Users\\rebecca.costa.manzi\\Desktop\\react_origamid\\0206_ambiente-do-curso\\appreact\\src\\App.js":"1","C:\\Users\\rebecca.costa.manzi\\Desktop\\react_origamid\\0206_ambiente-do-curso\\appreact\\src\\index.js":"2"},{"size":1615,"mtime":1607695007344,"results":"3","hashOfConfig":"4"},{"size":196,"mtime":1606744362220,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"r3e2hg",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rebecca.costa.manzi\\Desktop\\react_origamid\\0206_ambiente-do-curso\\appreact\\src\\App.js",["11"],"import React from 'react';\n\n// Mostre os dados da aplicação, como aprensetado no vídeo\n// Não utilize CSS externo, use o style para mudar as cores\n// Se a situação estiver ativa pinte de verde, inativa vermelho\n// Se o gasto for maior que 10000 mostre uma mensagem\nconst luana = {\n  cliente: 'Luana',\n  idade: 27,\n  compras: [\n    { nome: 'Notebook', preco: 'R$ 2500' },\n    { nome: 'Geladeira', preco: 'R$ 3000' },\n    { nome: 'Smartphone', preco: 'R$ 1500' },\n  ],\n  ativa: true,\n};\n\nconst mario = {\n  cliente: 'Mario',\n  idade: 31,\n  compras: [\n    { nome: 'Notebook', preco: 'R$ 2500' },\n    { nome: 'Geladeira', preco: 'R$ 3000' },\n    { nome: 'Smartphone', preco: 'R$ 1500' },\n    { nome: 'Guitarra', preco: 'R$ 3500' },\n  ],\n  ativa: false,\n};\n\nconst App = () => {\n  const dados = mario;\n  const total = dados.compras\n    .map((item) => Number(item.preco.replace('R$ ', ''))) // transforma os itens 'preco' do array em numeros\n    .reduce((a, b) => a + b); // irá somar o primeiro número com o próximo, até finalizar\n\n  return (\n    <div>\n      <p>Nome: {dados.cliente}</p>\n      <p>Idade: {dados.idade}</p>\n      <p>\n        Situação:{' '}\n        <span style={{ color: dados.ativa ? 'green' : 'red' }}>\n          {dados.ativa ? 'Ativa' : 'Inativa'}\n        </span>\n      </p>\n      <p>Total gasto: R${total}</p>\n      {total > 10000 && <p>Você está gastando muito</p>}\n    </div>\n  );\n};\n\nexport default App;\n// React.Fragment ou <> </>\n// atributos com nomes compostos devem ser utilizados como camelCase. ex: <video autoPlay>\n// para colocar js no jsx, usar {} (variaveis, expressoes, etc)\n","C:\\Users\\rebecca.costa.manzi\\Desktop\\react_origamid\\0206_ambiente-do-curso\\appreact\\src\\index.js",[],{"ruleId":"12","severity":1,"message":"13","line":7,"column":7,"nodeType":"14","messageId":"15","endLine":7,"endColumn":12},"no-unused-vars","'luana' is assigned a value but never used.","Identifier","unusedVar"]